import React, { useEffect, useRef, useState } from "react";
import { useNavigate } from "react-router-dom";

const loveMessages = [
  "‡∏ñ‡πâ‡∏≤‡πÄ‡∏ò‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü ‡∏â‡∏±‡∏ô‡∏Å‡πá‡∏Ñ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏• ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏ß‡∏≤‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏±‡∏ô‡∏ï‡∏≤ üíï",
  "‡∏£‡∏π‡πâ‡πÑ‡∏´‡∏°‡∏ó‡∏≥‡πÑ‡∏°‡∏ú‡∏°‡∏ñ‡∏∂‡∏á‡πÑ‡∏°‡πà‡∏Å‡∏•‡∏±‡∏ß‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∑‡∏î... ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏µ‡πÅ‡∏™‡∏á‡∏à‡∏≤‡∏Å‡∏î‡∏ß‡∏á‡∏ï‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‚ú®",
  "‡πÇ‡∏•‡∏Å‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÅ‡∏Ñ‡πà‡∏™‡∏≠‡∏á‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ú‡∏°‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡πÑ‡∏õ ‡∏Ñ‡∏∑‡∏≠ ‚Äò‡∏•‡∏°‡∏´‡∏≤‡∏¢‡πÉ‡∏à‚Äô ‡∏Å‡∏±‡∏ö ‚Äò‡∏Ñ‡∏∏‡∏ì‚Äô üíñ",
  "‡πÄ‡∏´‡πá‡∏ô‡∏¢‡∏¥‡πâ‡∏°‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πÑ‡∏£ ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏Å‡πá‡πÅ‡∏ó‡∏ö‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ üòç",
  "‡∏ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏ú‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏≤‡∏ß‡∏™‡∏±‡∏Å‡∏î‡∏ß‡∏á ‡∏ú‡∏°‡∏Ñ‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏∏‡∏ì ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏î‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡πÉ‡∏à‡∏ú‡∏° üåô",
  "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏°‡∏ß‡πà‡∏≤‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏Å‡πá‡πÄ‡∏ï‡πâ‡∏ô‡πÅ‡∏£‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏ï‡∏≠‡∏ô‡∏ß‡∏¥‡πà‡∏á‡∏≠‡∏µ‡∏Å üèÉ‚Äç‚ôÇÔ∏è‚ù§Ô∏è",
  "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÇ‡∏•‡∏Å‡∏ó‡∏±‡πâ‡∏á‡πÉ‡∏ö‡∏Ç‡∏≠‡∏á‡∏ú‡∏°‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ üåçüíò",
  "‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ú‡∏°‡∏™‡πà‡∏á‡πÑ‡∏õ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ß‡πà‡∏≤‡∏á ‡πÅ‡∏ï‡πà‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏£‡∏¥‡∏á‡πÜ üì©üíï",
  "‡∏ú‡∏°‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡πÇ‡∏•‡∏Å‡∏´‡∏£‡∏≠‡∏Å ‡πÅ‡∏Ñ‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡πá‡∏û‡∏≠‡πÅ‡∏•‡πâ‡∏ß üíë"
];

function Love() {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isPlaying, setIsPlaying] = useState(false);
  const audioRef = useRef<HTMLAudioElement>(null);
  const navigate = useNavigate(); // ‚úÖ useNavigate

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentIndex((prev) => (prev + 1) % loveMessages.length);
    }, 10000);
    return () => clearInterval(interval);
  }, []);

  const togglePlay = () => {
    if (audioRef.current) {
      if (isPlaying) {
        audioRef.current.pause();
      } else {
        audioRef.current.play();
      }
      setIsPlaying(!isPlaying);
    }
  };

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gradient-to-br from-white to-pink-100">
      {/* Background Music */}
      <audio ref={audioRef} loop>
        <source src="/romantic-song.mp3" type="audio/mpeg" />
      </audio>

      <div className="bg-white rounded-2xl shadow-lg p-10 max-w-xl w-11/12 animate-scale-in">
        <h1 className="text-3xl font-bold text-pink-500 mb-6 text-center animate-float">
          üíñ Love Blog üíñ
        </h1>
        <p
          key={currentIndex}
          className="text-lg text-gray-700 min-h-[60px] text-center animate-fade-in"
        >
          {loveMessages[currentIndex]}
        </p>

        {/* Play / Pause Button */}
        <button
          onClick={togglePlay}
          className="mt-6 px-6 py-2 rounded-full bg-pink-500 text-white font-semibold shadow-md hover:bg-pink-600 transition"
        >
          {isPlaying ? "‚è∏Ô∏è Pause Music" : "‚ñ∂Ô∏è Play Music"}
        </button>

        {/* Back Button */}
        <button
          onClick={() => navigate("/")}  // ‚úÖ go back to home
          className="mt-6 px-10 py-2 ml-40 rounded-full bg-pink-500 text-white font-semibold shadow-md hover:bg-pink-600 transition"
        >
          Back
        </button>
      </div>
    </div>
  );
}

export default Love;
